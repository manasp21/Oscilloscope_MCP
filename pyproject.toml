[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "oscilloscope-mcp"
version = "1.0.0"
description = "Professional oscilloscope and function generator MCP server"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Oscilloscope MCP Team", email = "team@oscilloscope-mcp.com"}
]
keywords = ["mcp", "oscilloscope", "function-generator", "signal-processing", "test-measurement"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Topic :: System :: Hardware",
]

dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.9.0",
    "uvicorn>=0.23.0",
    "starlette>=0.27.0",
    "websockets>=11.0.0",
    "aiohttp>=3.8.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.13.0",
    "pyserial>=3.5",
    "aiofiles>=23.0.0",
    "structlog>=23.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "coverage>=7.0.0",
]

hardware = [
    "pyusb>=1.2.1",
    "pyvisa>=1.13.0",
    "pyvisa-py>=0.7.0",
]

[project.urls]
Homepage = "https://github.com/oscilloscope-mcp/oscilloscope-mcp"
Repository = "https://github.com/oscilloscope-mcp/oscilloscope-mcp"
Documentation = "https://docs.oscilloscope-mcp.com"
Issues = "https://github.com/oscilloscope-mcp/oscilloscope-mcp/issues"

[project.scripts]
oscilloscope-mcp = "oscilloscope_mcp.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["oscilloscope_mcp"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--asyncio-mode=auto",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "hardware: Hardware-dependent tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]